/**Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.

For example, given nums = [0, 1, 0, 3, 12], after calling your function, nums should be [1, 3, 12, 0, 0].

Note:
You must do this in-place without making a copy of the array.
Minimize the total number of operations.**/

//写一个函数效果，是一组数字中的0全部放在后面，其余非0数按原数字的次序排列。
//注意点，不能新建一个数组，并且最小化操作次数
//我的想法是将数组中的遇到的第1个非0数直接放在第1位，第2个非0数直接放在第2位，依次推之。
//关键点是首先判定非0数，再操作。若是0，则跳过。


class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        int k=0;
        for(int i=0;i<nums.capacity();i++){
            if(nums[i]!=0){//这一判定条件就是上面的关键点
                int x=nums[i];
                nums[i]=nums[k];
                nums[k]=x;
                k++;
            }
        }
    }
};
