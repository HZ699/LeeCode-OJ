/*Given two binary trees, write a function to check if they are equal or not.

Two binary trees are considered equal if they are structurally identical and the nodes have the same value.*/
//问题:判断两个二叉树是否相等，不仅位置相等，值也要相等
//关键点：递归调用思想，递归对左右子树各自对比。



/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        if(p==NULL&&q==NULL){
            return true;
        }else if((p!=NULL&&q==NULL)||(p==NULL&&q!=NULL)){
            return false;
        }      //上面是递归的基础点。
        //下面是递归的抽象逻辑顺序
        else if(p->val==q->val){
            if(isSameTree(p->left,q->left)&&isSameTree(p->right,q->right)){
                return true;
            }else{
                return false;
            }
        }else
        {
            return false;
        }
    }
};
